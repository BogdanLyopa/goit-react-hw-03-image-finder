{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","galleryApi.js","Components/Modal/Modal.js","Components/Button/Button.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","onChange","autoFocus","placeholder","Component","ImageGalleryItem","src","largeImageURL","tags","onOpen","alt","data-img","onClick","ImageGallery","pictures","onOpenModal","map","picture","webformatURL","id","page","axios","get","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","window","addEventListener","removeEventListener","children","Button","loadMore","App","isLoading","showModal","largeImage","onChangeQuery","query","fetchHits","options","galleryApi","then","data","prevState","hits","finally","toggleModal","dataset","img","prevProps","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad59a8bf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Searchbar extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({ searchQuery: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.searchQuery);\r\n\r\n    this.setState({ searchQuery: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form onSubmit={this.handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            onChange={this.handleChange}\r\n            value={this.state.searchQuery}\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","const ImageGalleryItem = ({ src, largeImageURL, tags, onOpen }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={src}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        data-img={largeImageURL}\r\n        onClick={onOpen}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import ImageGalleryItem from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ pictures, onOpenModal }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pictures.map(picture => (\r\n        <ImageGalleryItem\r\n          key={picture.id}\r\n          src={picture.webformatURL}\r\n          largeImageURL={picture.largeImageURL}\r\n          tags={picture.tags}\r\n          onOpen={onOpenModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from 'axios';\r\n\r\nconst fetchHits = ({ searchQuery = '', page = 1 }) => {\r\n  return axios.get(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=20363130-273044db5e5ac809a489365f2&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n};\r\n\r\nexport default { fetchHits };\r\n","import React, { Component } from 'react';\r\n\r\nexport class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","const Button = ({ loadMore }) => {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={loadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport galleryApi from './galleryApi';\nimport Modal from './Components/Modal';\nimport Button from './Components/Button';\nimport Loader from 'react-loader-spinner';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport './styles.css';\n\nexport class App extends Component {\n  state = {\n    pictures: [],\n    page: 1,\n    searchQuery: '',\n    isLoading: false,\n    showModal: false,\n    largeImage: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchHits();\n    }\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  onChangeQuery = query => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      pictures: [],\n    });\n  };\n\n  fetchHits = () => {\n    const { page, searchQuery } = this.state;\n\n    const options = {\n      searchQuery,\n      page,\n    };\n\n    this.setState({ isLoading: true });\n    galleryApi\n      .fetchHits(options)\n      .then(({ data }) => {\n        this.setState(prevState => ({\n          pictures: [...prevState.pictures, ...data.hits],\n          page: prevState.page + 1,\n        }));\n      })\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onOpenModal = event => {\n    this.setState({\n      largeImage: event.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  render() {\n    const { pictures, isLoading, showModal, largeImage } = this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.onChangeQuery} />\n        {isLoading && (\n          <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={100} width={100} />\n        )}\n\n        <ImageGallery pictures={pictures} onOpenModal={this.onOpenModal} />\n        {pictures.length > 0 && !isLoading && (\n          <Button loadMore={this.fetchHits} />\n        )}\n\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={largeImage} alt=\"\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}